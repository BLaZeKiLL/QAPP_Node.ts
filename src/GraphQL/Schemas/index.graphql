# import Question, QuestionInput, QuestionUpdate, QuestionsResponse, QuizSumaryResponse from 'question.graphql'
# import Quiz, QuizInput, QuizResponse from 'quiz.graphql'
# import ResultInput, AddResultResponse, QuizResultsResponse from 'result.graphql'
# import StudentInput, StudentUpdate, StudentAuthResponse from 'student.graphql'
# import TeacherInput, TeacherUpdate, TeacherAuthResponse from 'teacher.graphql'
# import Message from 'misc.graphql'

type Query {
  getQuestions(searchQuery: String!): QuestionsResponse! #
  getQuiz(email: String!): QuizResponse! #
  getQuizSummary(tid: String): QuizSumaryResponse! #
  getQuizResults(quizID: ID!): QuizResultsResponse!
  getStudentResults(studentID: ID!): QuizResultsResponse!
  studentLogin(email: String!, password: String!, deviceID: String!): StudentAuthResponse! #
  teacherLogin(email: String!, password: String!): TeacherAuthResponse! #
}

type Mutation {
  # ADDITIONS
  addQuestion(question: QuestionInput!): QuestionResponse! #
  addQuestions(questions: [QuestionInput!]!): QuestionsResponse! #
  addQuiz(quiz: QuizInput!): Boolean! #
  addResult(result: ResultInput!): AddResultResponse!
  addStudent(student: StudentInput!): Boolean! #
  addTeacher(teacher: TeacherInput!): Boolean! #

  # UPDATIONS
  updateQuestion(question: QuestionUpdate!): Boolean! #
  updateQuiz(quiz: QuizUpdate!): Boolean!
  updateStudent(student: StudentUpdate!): Boolean! #
  updateTeacher(teacher: TeacherUpdate!): Boolean! #

  # DELETIONS
  deleteQuestion(id: ID!): Boolean! #
  deleteQuiz(id: ID!): Boolean!
}
